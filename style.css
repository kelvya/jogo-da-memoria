* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  height: 100vh;
  display: flex;
  background-color: #3b3b3b;
  box-sizing: border-box;
  padding-bottom: 2rem;
  padding-top: 2rem;
  align-items: center;
}

@property --rotate {
    syntax: "<angle>";
    initial-value: 132deg;
    inherits: false;
  }

  :root {
    --card-height: 65vh;
    --card-width: calc(var(--card-height) / 1.5);
  }
  
  
  .card {
    background: #ffffff;
    width: var(--card-width);
    height: var(--card-height);
    padding: 3px;
    position: relative;
    border-radius: 6px;
    justify-content: center;
    align-items: center;
    display: flex;
    font-size: 1.5em;
    color: #ffffff;
    cursor: pointer;
    font-family: cursive;
  }
  
  
  .card:hover {
    color: rgb(255, 255, 255);
    transition: color 1s;
  }
  .card:hover:before, .card:hover:after {
    animation: none;
    opacity: 0;
  }
  
  
  .card::before {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 8px;
    background-image: linear-gradient(
      var(--rotate)
      , #f9fafa, #5c5a59, #0d0d0e );
      position: absolute;
      z-index: -1;
      top: -1%;
      left: -2%;
      animation: spin 2.5s linear infinite;
  }
  
  .card::after {
    position: absolute;
    content: "";
    top: calc(var(--card-height) / 6);
    left: 0;
    right: 0;
    z-index: -1;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    transform: scale(0.8);
    filter: blur(calc(var(--card-height) / 6));
    background-image: linear-gradient(
      var(--rotate)
      , #ffffff, #535151 43%, #ffffff);
      opacity: 1;
    transition: opacity .5s;
    animation: spin 2.5s linear infinite;
  }
  
  @keyframes spin {
    0% {
      --rotate: 0deg;
    }
    100% {
      --rotate: 360deg;
    }
  }
  
 /*
  a {
    color: #ffffff;
    text-decoration: none;
    font-family: sans-serif;
    font-weight: bold;
    margin-top: 2rem;
  }
  */
  
  .memory-game {
      height: 640px;
      width: 640px;
      margin: auto;
      display: flex;
      flex-wrap: wrap;
      perspective: 1000px; /* perspectiva do usuario no eixo z, quanto maior, maior o efeito da perspectiva */
  }
  
  .card {
      height: calc( 33.333% - 10px);
      width: calc(25% - 10px);
      margin: 5px;
      position: relative;
      box-shadow: 1px 1px 1px rgba(0,0,0,.3);
      cursor: pointer;
      transform: scale(1);
      transform-style: preserve-3d; /* adiciona perspectiva 3d, para que o elemento nao fique achatada no plano */
      transition: transform .9s; /* adiciona efeito de movimento ao flip do card */
  }
  
  .card:active{
      transform: scale(0.97);
      transition: transform .2s;
  }
  
  .card-front,
  .card-back {
    width: 100%;
    height: 100%;
    padding: 20px;
    position: absolute;
    border-radius: 5px;
    background: #ffffff;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden; /* todo elemento tem uma frente e um verso (ao contrario, como um espelho.) essa propriedade retira o verso */
  }
  
  .card-front {
      transform: rotateY(180deg); /* antes, o verso aparecia transparente, pois ambas as imagens tem position absolute, ao girar no eixo Y, elas ficaram com os versos virados */
  }
  
  /* flip card animation */
  
  .card.flip {
      transform: rotateY(180deg);
  }